[gd_scene load_steps=5 format=2]

[ext_resource path="res://Scenes/Overlap/WanderController.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Overlap/SoftCollision.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/Overlap/PlayerDetectionZone.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

class_name Enemy

export var ACCELERATION = 300
export var MAX_SPEED = 50
export var FRICTION = 200
export var WANDER_TARGER_RANGE = 4

enum {
	IDLE,
	WANDER,
	CHASE
}

var velocity = Vector2.ZERO
var knockback = Vector2.ZERO

var state = CHASE

onready var softCollision = $SoftCollision
onready var wanderController = $WanderController
onready var playerDetectionZone = $PlayerDetectionZone

func _physics_process(delta):
	knockback = knockback.move_toward(Vector2.ZERO, delta * FRICTION)
	knockback = move_and_slide(knockback)
	
	match state:
		IDLE:
			velocity = velocity.move_toward(Vector2.ZERO, delta * FRICTION)
			seek_player()
			
			if wanderController.get_time_left() == 0:
				update_state()
			
		WANDER: 
			seek_player()
			
			if wanderController.get_time_left() == 0:
				update_state()
			
			accelerate_towards_point(wanderController.target_position, delta) 
			
			if global_position.distance_to(wanderController.target_position) <= WANDER_TARGER_RANGE:
				update_state()
				
		CHASE:
			var player = playerDetectionZone.player
			if player != null:
				accelerate_towards_point(player.global_position, delta) 
			else: 
				state = IDLE
			
			
	if softCollision.is_colliding():
		velocity += softCollision.get_push_vector() * delta * 400
	
	velocity = move_and_slide(velocity)
	
func accelerate_towards_point(position, delta):
	var direction = global_position.direction_to(position) 
	velocity = velocity.move_toward(direction * MAX_SPEED, ACCELERATION * delta)

func seek_player():
	if playerDetectionZone.can_see_player():
		state = CHASE
		
func update_state():
	state = pick_random_state([IDLE, WANDER])
	wanderController.start_wander_timer(rand_range(1, 3))

func pick_random_state(state_list):
	state_list.shuffle()
	return state_list.pop_front()
"

[node name="Enemy" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="WanderController" parent="." instance=ExtResource( 2 )]

[node name="SoftCollision" parent="." instance=ExtResource( 3 )]

[node name="PlayerDetectionZone" parent="." instance=ExtResource( 4 )]
